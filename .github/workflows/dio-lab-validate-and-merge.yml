name: DIO Lab Workflow

on:
  pull_request_target:
    types:
      - opened
      - synchronize
      - labeled

jobs:
  validate-and-comment:
    runs-on: ubuntu-latest

    steps:
    # Verifica se a execu√ß√£o foi acionada pela etiqueta [run dio workflow]
    - name: Check Triggering Label [run dio workflow]
      if: github.event.action == 'labeled' && github.event.label.name != 'run dio workflow'
      run: |
        echo "WARN: Workflow was triggered by another label, not [run dio workflow]. Skipping execution..."
        echo "::set-output name=skip::true"
        exit 78  # exit code 78 is a neutral exit for GitHub Actions, meaning the action was skipped.
    
    # Realiza o checkout seguro do c√≥digo do PR
    - name: Checkout code from PR (Safe Checkout)
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    # Valida o PR de acordo com as recomenda√ß√µes do README.md e CONTRIBUTE.md
    - name: Validate PR
      run: |
        AUTHOR_NAME="${{ github.event.pull_request.user.login }}"
        FILE_PATH="community/$AUTHOR_NAME.md"
        
        # Verifica se o arquivo esperado existe
        if [[ ! -f $FILE_PATH ]]; then
            echo "ERROR: Expected a file at $FILE_PATH, but it doesn't exist."
            exit 1
        fi
        
        # Obt√©m a lista de arquivos modificados usando a CLI do GitHub
        files_changed=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files --paginate | jq -r '.[].filename')
        
        # Lista os arquivos modificados para fins de depura√ß√£o
        echo "Changed files:"
        echo "$files_changed"
        
        # Verifica se este √© o √∫nico arquivo modificado
        NUM_CHANGED_FILES=$(echo "$files_changed" | wc -l)
        if [[ "$NUM_CHANGED_FILES" -ne 1 ]]; then
            echo "ERROR: More files were changed besides $FILE_PATH."
            exit 1
        fi
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Comenta no PR se foi bem-sucedido e adiciona a etiqueta [automerge]
    - name: Comment PR on Success and Add Label [automerge]
      if: success()
      run: |
        REPO_URL=${{ github.event.pull_request.head.repo.html_url }}
        cat <<EOT > message.txt
        A√≠ sim hein! Seu PR foi aprovado ü•≥ Voc√™ j√° pode submeter o seu projeto na plataforma da DIO. Segue sua URL:
        \`\`\`
        $REPO_URL
        \`\`\`
        Faremos o merge aqui em breve. Muito obrigado por fazer parte da nossa comunidade üöÄ
        EOT

        gh pr comment ${{ github.event.pull_request.number }} --body-file=message.txt
        gh pr edit ${{ github.event.pull_request.number }} --add-label "automerge"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Comenta no PR em caso de falha, destacando as recomenda√ß√µes do README.md e CONTRIBUTE.md
    - name: Comment PR on Failure
      if: failure() && steps.check-label.outputs.skip != 'true'
      run: |
        cat <<EOT > message.txt
        Ol√°! Parece que houve um problema com o seu PR üßê Aqui est√£o algumas coisas para verificar:
        - Seu PR deve conter **apenas** o arquivo \`community/${{ github.event.pull_request.user.login }}.md\`
        - O nome desse arquivo deve ser **exatamente (_case-sensitive_)** igual ao nome de usu√°rio no GitHub.

        Para obter mais detalhes e garantir que tudo esteja correto, confira nossas instru√ß√µes no [README.md](https://github.com/digitalinnovationone/dio-lab-open-source/blob/main/README.md) e [CONTRIBUTE.md](https://github.com/digitalinnovationone/dio-lab-open-source/blob/main/CONTRIBUTE.md).

        Se o seu PR tem um objetivo diferente, n√£o se preocupe! Ele ser√° analisado manualmente por nossa equipe, o que pode levar um pouco mais de tempo. Pedimos paci√™ncia nesse processo üôè

        Agradecemos sua contribui√ß√£o e compreens√£o üëäüòâ
        EOT

        gh pr comment ${{ github.event.pull_request.number }} --body-file=message.txt
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Realiza o merge do PR, caso o job "validate-and-comment" tenha sido executado com sucesso ;)
  merge:
    runs-on: ubuntu-latest
    needs: validate-and-comment
    
    steps:
    - name: Merge PR
      uses: pascalgn/automerge-action@v0.15.6
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
